<?xml version="1.0" encoding="UTF-8"?>
<project name="php-skeleton" default="build">
    <property name="workspace" value="${basedir}"/>
    <property name="build_dir" value="${workspace}/build"/>
    <property name="log_dir" value="${build_dir}/log"/>
    <property name="bin_dir" value="${workspace}/vendor/bin"/>

    <macrodef name="echoTS">
        <attribute name="message"/>
        <sequential>
            <local name="current.time"/>
            <tstamp>
                <format property="current.time" pattern="yyyy-MM-dd HH:mm:ss"/>
            </tstamp>
            <echo message="${current.time} - @{message}"/>
        </sequential>
    </macrodef>

    <target name="metrics" depends="phpmd, phpcs, phpcpd, phploc, pdepend">
        <echoTS message="metrics meta target complete"/>
    </target>

    <target name="build" depends="metrics, phpunit, phpcb, phpdox, phpdoc">
        <echoTS message="build meta target complete"/>
    </target>

    <target name="clean">
        <echoTS message="removing old build directory"/>
        <delete dir="${build_dir}"/>
    </target>

    <target name="build-directory" depends="clean">
        <echoTS message="creating required build subdirectories"/>
        <mkdir dir="${log_dir}"/>
        <mkdir dir="${build_dir}/pdepend"/>
    </target>

    <target name="phpmd" depends="build-directory">
        <echoTS message="running mess detector. Exit codes: 0 = ok, 1 = an error occurred, 2 = violations occurred (http://phpmd.org/documentation/index.html)."/>
        <exec executable="${bin_dir}/phpmd">
            <arg path="${workspace}/src,${workspace}/test"/>
            <arg value="xml"/>
            <arg value="${workspace}/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="${log_dir}/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs" depends="build-directory">
        <echoTS message="running code sniffer"/>
        <exec executable="${bin_dir}/phpcs">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${log_dir}/checkstyle-result.xml"/>
            <arg value="--standard=PSR2"/>
            <arg path="${workspace}/src"/>
            <arg path="${workspace}/test"/>
        </exec>
    </target>

    <target name="phpcpd" depends="build-directory">
        <echoTS message="running copy paste detector"/>
        <exec executable="${bin_dir}/phpcpd">
            <arg value="--log-pmd"/>
            <arg value="${log_dir}/pmd-cpd.xml"/>
            <arg path="${workspace}/src"/>
            <arg path="${workspace}/test"/>
        </exec>
    </target>

    <target name="phploc" depends="build-directory">
        <echoTS message="running lines of code analysis"/>
        <exec executable="${bin_dir}/phploc">
            <arg value="--count-tests"/>
            <!--<arg value="-log-csv"/>-->
            <!--<arg value="${log_dir}/phploc.csv"/>-->
            <arg value="--log-xml"/>
            <arg value="${log_dir}/phploc.xml"/>
            <arg path="${workspace}/src"/>
            <arg path="${workspace}/test"/>
        </exec>
    </target>

    <target name="pdepend" depends="build-directory">
        <echoTS message="running dependency analysis"/>
        <exec executable="${bin_dir}/pdepend">
            <arg value="--jdepend-xml=${log_dir}/jdepend.xml"/>
            <arg value="--jdepend-chart=${build_dir}/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${build_dir}/pdepend/pyramid.svg"/>
            <arg path="${workspace}/src,${workspace}/test"/>
        </exec>
    </target>

    <target name="phpdox" depends="build-directory, metrics, phpunit">
        <exec executable="${bin_dir}/phpdox" dir="${workspace}"/>
        <delete dir="${build_dir}/phpdox-tmp"/>
    </target>

    <target name="phpdoc" depends="build-directory, metrics, phpunit">
        <exec executable="${bin_dir}/phpdoc" dir="${workspace}"/>
        <delete dir="${build_dir}/phpdoc-tmp"/>
    </target>

    <target name="phpcb" depends="build-directory">
        <echoTS message="generating code browser"/>
        <exec executable="${bin_dir}/phpcb">
            <arg value="--log"/>
            <arg path="${log_dir}"/>
            <arg value="--source"/>
            <arg path="${workspace}/src"/>
            <arg value="--output"/>
            <arg path="${build_dir}/phpcb"/>
        </exec>
    </target>

    <target name="check-composer">
        <available file="composer.phar" property="composer.present"/>
    </target>

    <target name="download-composer" depends="check-composer" unless="composer.present">
        <echoTS message="downloading composer"/>
        <exec executable="wget" dir="${workspace}">
            <arg value="http://getcomposer.org/composer.phar"/>
        </exec>
    </target>

    <target name="update-composer" depends="download-composer">
        <echoTS message="updating composer"/>
        <exec executable="php" dir="${workspace}">
            <arg value="composer.phar"/>
            <arg value="selfupdate"/>
        </exec>
    </target>

    <target name="composer-install" depends="update-composer">
        <echoTS message="installing composer dependencies"/>
        <exec executable="php" dir="${workspace}">
            <arg value="composer.phar"/>
            <arg value="install"/>
        </exec>
    </target>

    <target name="phpunit" depends="build-directory, composer-install">
        <echoTS message="running phpunit"/>
        <exec executable="${bin_dir}/phpunit">
            <arg value="-c"/>
            <arg path="${workspace}/phpunit.ci.xml"/>
        </exec>
    </target>
</project>
